name: Monitor（server酱）

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: '0 8-20 * * *'
      timezone: Asia/Shanghai

permissions:
  contents: write

jobs:
  check_url_changes:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Set timezone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Check for URL changes
        id: check_changes
        run: |
          python - <<EOF
          import os
          import json
          import hashlib
          import requests

          headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
            "Cache-Control": "no-cache",
            "Pragma": "no-cache"
          }

          urls = os.getenv("CHECK_URLS").splitlines()
          print(f"开始检查 {len(urls)} 个 URL")

          state_file = os.path.join(os.environ['GITHUB_WORKSPACE'], 'url_state.json')

          previous_states = {}
          if os.path.exists(state_file):
              with open(state_file, 'r') as f:
                  previous_states = json.load(f)
          else:
              print(f"状态文件 {state_file} 不存在，将初始化新文件")
              previous_states = {}

          current_states = {}
          changed_urls = {}

          url_titles = {
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2331": "标题1",
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2332": "标题2",
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3508": "标题3",
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3509": "标题4",
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3510": "标题5",
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3511": "标题6",
              "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3512": "标题7",
              "https://raw.githubusercontent.com/rzhy1/check-version/refs/heads/main/README.md": "标题8",
          }

          for url in urls:
              print(f"正在检查 URL: {url}")
              try:
                  response = requests.get(url, headers=headers, timeout=10)
                  response.raise_for_status()

                  content = ''.join(response.text.split())
                  if not content.strip():
                      print(f"警告：URL {url} 返回空内容")
                      continue

                  hash_value = hashlib.md5(content.encode('utf-8')).hexdigest()
                  current_states[url] = hash_value

                  if url in previous_states and previous_states[url] != hash_value:
                      changed_urls[url] = url_titles.get(url, "默认标题")
                      print(f"检测到变化：{url}")
                  elif url not in previous_states:
                      print(f"首次记录该 URL：{url}")
                  else:
                      print(f"无变化：{url}")

              except Exception as e:
                  print(f"Error checking URL {url}: {e}")

          if changed_urls:
              message = "以下链接的内容发生了变化：\n"
              for url, title in changed_urls.items():
                  message += f"{title}: {url}\n"

              sckey = os.getenv("SCTKEY")
              if not sckey:
                  print("Error: SCTKEY is not set or empty.")
              else:
                  notify_url = f"https://sctapi.ftqq.com/{sckey}.send"
                  data = {
                      "title": "多个链接内容更新",
                      "desp": message
                  }
                  try:
                      response = requests.post(notify_url, data=data, timeout=10)
                      if response.status_code == 200:
                          print("通知发送成功")
                          print(f"Server 酱返回数据: {response.json()}")
                      else:
                          print(f"通知发送失败，状态码: {response.status_code}, 响应内容: {response.text}")
                  except Exception as e:
                      print(f"Error sending notification: {e}")
          else:
              print("未检测到任何变化")

          with open(state_file, 'w') as f:
              json.dump(current_states, f)
              print(f"已保存当前状态到文件 {state_file}")
          EOF

      - name: Commit and push state file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if git diff --quiet url_state.json; then
              echo "No changes detected in url_state.json."
          else
              echo "Changes detected in url_state.json, preparing to commit..."
              git add url_state.json
              git commit -m "Update URL states" || echo "No changes to commit."
              git push origin HEAD || echo "Push failed, please check permissions or network issues."
              echo "状态文件已更新并提交"
          fi
