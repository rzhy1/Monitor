name: Monitor（server酱）

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: '0 23,0-13 * * *'

permissions:
  contents: write

jobs:
  check_url_changes:
    runs-on: ubuntu-latest

    env:
      SCTKEY: ${{ secrets.SCTKEY }} 
      CHECK_URLS: |
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2331
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2332
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3508
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3509
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3510
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3511
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3512
        https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxjhfb
        https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxygs
        https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxwj
        https://raw.githubusercontent.com/rzhy1/aria2-static-build/refs/heads/main/.github/workflows/build_and_release.yml
      URL_DESCRIPTIONS: |
        {"https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2331": "杭州地铁招标计划发布",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2332": "杭州地铁招标预公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3508": "杭州地铁特别提醒项目",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3509": "杭州地铁招标核准项目",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3510": "杭州地铁招标文件公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3511": "杭州地铁中标公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3512": "杭州地铁中标结果",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxjhfb": "杭州建设项目 招标计划发布",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxygs": "杭州建设项目 招标预公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxwj": "杭州建设项目 招标文件公示",
         "https://raw.githubusercontent.com/rzhy1/aria2-static-build/refs/heads/main/.github/workflows/build_and_release.yml": "测试专用"}
         

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Check for URL changes
        id: check_changes
        run: |
          python - << "EOF"
          import os
          import re
          import json
          import time
          import random
          import hashlib
          import requests

          USER_AGENTS = [
              "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
              "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
              "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
              "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/119.0",
              "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0"
          ]

          headers = {
            "User-Agent": random.choice(USER_AGENTS),
            "Cache-Control": "no-cache",
            "Pragma": "no-cache"
          }

          urls = os.getenv("CHECK_URLS").splitlines()
          url_descriptions = json.loads(os.getenv("URL_DESCRIPTIONS"))
          print(f"开始检查 {len(urls)} 个 URL")

          state_file = os.path.join(os.environ['GITHUB_WORKSPACE'], 'url_state.json')

          previous_states = {}
          if os.path.exists(state_file):
              with open(state_file, 'r') as f:
                  previous_states = json.load(f)
              print(f"从文件 {state_file} 加载了之前的状态，共 {len(previous_states)} 条记录")
          else:
              print(f"状态文件 {state_file} 不存在，将初始化新文件")

          current_states = {}
          changed_urls = []

          for url in urls:
              # print(f"正在检查 URL: {url}")
              try:
                  response = requests.get(url, headers=headers, timeout=10, verify=True)
                  response.raise_for_status()
                  content_hash = hashlib.sha256(response.content).hexdigest()
                  current_states[url] = content_hash

                  if url in previous_states and previous_states[url] !=  content_hash:
                      description = url_descriptions.get(url, "未知来源")
                      changed_urls.append(f"{description}: {url}")
                      print(f"检测到变化：{description} ({url})")
                  elif url not in previous_states:
                      print(f"首次记录该 URL：{url}")
                  #else:
                      #print(f"无变化：{url}")
                  time.sleep(random.uniform(1, 3))
                  
              except Exception as e:
                  print(f"Error checking URL {url}: {e}")

          if changed_urls:
              message = re.sub(r'\n{3,}', '\n\n', "以下内容发生了变化：\n\n" + "\n\n".join(url.strip().replace('\n','') for url in changed_urls if url.strip()))
              print(f"检测到内容变化，准备发送通知:\n{message}")

              sckey = os.getenv("SCTKEY")
              if not sckey:
                  print("Error: SCTKEY is not set or empty.")
              else:
                  notify_url = f"https://sctapi.ftqq.com/{sckey}.send"
                  data = {
                      "title": "招标信息更新",
                      "desp": message
                  }
                  try:
                      response = requests.post(notify_url, data=data, timeout=10)
                      if response.status_code == 200:
                          print("通知发送成功")
                          print(f"Server 酱返回数据: {response.json()}")
                      else:
                          print(f"通知发送失败，状态码: {response.status_code}, 响应内容: {response.text}")
                  except Exception as e:
                      print(f"Error sending notification: {e}")
          else:
              print("未检测到任何变化")

          with open(state_file, 'w') as f:
              json.dump(current_states, f)
              print(f"已保存当前状态到文件 {state_file}")
          EOF
          
      - name: Commit and push state file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if git diff --quiet url_state.json; then
              echo "No changes detected in url_state.json."
          else
              echo "Changes detected in url_state.json, preparing to commit..."
              git add url_state.json
              git commit -m "Update URL monitoring states [skip ci]" 
              git push origin HEAD || echo "Push failed, please check permissions or network issues."
              echo "状态文件已更新并提交"
          fi
