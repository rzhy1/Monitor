name: Monitor（企业微信）

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: '0 22-23,0-16 * * *'

permissions:
  contents: write

jobs:
  check_url_changes:
    runs-on: ubuntu-latest
    env:
      SCTKEY: ${{ secrets.SCTKEY }}
      WEBHOOK_URLS: ${{ secrets.WEBHOOK_URLS }}
      CHECK_URLS: |
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2331
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2332
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3508
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3509
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3510
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3511
        https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3512
        https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxjhfb
        https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxygs
        https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxwj
        https://github.com/rzhy1/aria2-static-build/blob/main/.github/workflows/build_and_release.yml
      URL_DESCRIPTIONS: |
        {"https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2331": "杭州地铁招标计划发布",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=2332": "杭州地铁招标预公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3508": "杭州地铁特别提醒项目",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3509": "杭州地铁招标核准项目",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3510": "杭州地铁招标文件公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3511": "杭州地铁中标公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/search/queryContents.jhtml?titleOrCode=%E5%9F%8E%E5%B8%82%E8%BD%A8%E9%81%93%E4%BA%A4%E9%80%9A&status=5&channelId=3512": "杭州地铁中标结果",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxjhfb": "杭州建设项目招标计划发布",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxygs": "杭州建设项目招标预公示",
         "https://ztb.cxjw.hangzhou.gov.cn:8092/jyxxwj": "杭州建设项目招标文件公示",
         "https://github.com/rzhy1/aria2-static-build/blob/main/.github/workflows/build_and_release.yml": "测试专用"}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Check for URL changes
        id: check_changes
        run: |
          python - << "EOF"
          import os
          import json
          import hashlib
          import requests
          from bs4 import BeautifulSoup

          headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
            "Cache-Control": "no-cache",
            "Pragma": "no-cache"
          }

          urls = os.getenv("CHECK_URLS").splitlines()
          url_descriptions = json.loads(os.getenv("URL_DESCRIPTIONS"))
          print(f"开始检查 {len(urls)} 个 URL")

          state_file = os.path.join(os.environ['GITHUB_WORKSPACE'], 'url_state1.json')

          previous_states = {}
          if os.path.exists(state_file):
              with open(state_file, 'r') as f:
                  previous_states = json.load(f)
              print(f"从文件 {state_file} 加载了之前的状态，共 {len(previous_states)} 条记录")
          else:
              print(f"状态文件 {state_file} 不存在，将初始化新文件")

          current_states = {}
          changes = {}

          for url in urls:
              try:
                  response = requests.get(url, headers=headers)
                  if response.status_code == 200:
                      soup = BeautifulSoup(response.text, 'html.parser')

                      # 移除所有脚本和样式元素
                      for script in soup(["script", "style"]):
                          script.decompose()

                      # 获取主要内容
                      main_content = soup.find('div', {'class': 'menu menu_time'})  # 根据实际HTML结构调整选择器

                      if main_content is None:
                          text = soup.get_text(separator='\n', strip=True)
                          cleaned_text = '\n'.join([line for line in text.split('\n') if line.strip()])
                          print(f"未找到主要内容区域，使用全页内容: {url}")
                      else:
                          text = main_content.get_text(separator='\n', strip=True)
                          cleaned_text = '\n'.join([line for line in text.split('\n') if line.strip()])

                      # 生成哈希值
                      current_hash = hashlib.sha256(cleaned_text.encode()).hexdigest()
                      current_states[url] = {
                          'hash': current_hash
                      }

                      # 比较哈希值
                      if previous_states.get(url, {}).get('hash') != current_hash:
                          changes[url] = cleaned_text
                  else:
                      print(f"请求失败，状态码: {response.status_code} - {url}")
              except Exception as e:
                  print(f"Error checking {url}: {e}")

          # 输出变化的内容
          if changes:
              for url, content in changes.items():
                  print(f"网页 {url} 有更新")
          else:
              print("没有检测到任何变化")

          with open(state_file, 'w') as f:
            json.dump(current_states, f)
            print(f"已保存当前状态到文件 {state_file}")
          EOF

      - name: Commit and push state file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if git diff --quiet url_state1.json; then
              echo "No changes detected in url_state1.json."
          else
              echo "Changes detected in url_state1.json, preparing to commit..."
              git add url_state1.json
              git commit -m "Update URL states" || echo "No changes to commit."
              git push origin HEAD || echo "Push failed, please check permissions or network issues."
              echo "状态文件已更新并提交"
          fi
